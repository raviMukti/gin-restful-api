{
  "openapi": "3.0.1",
  "info": {
    "title": "Car Show Room API",
    "description": "Simple API Contract Car Show Room",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "car",
      "description": "Everything about Car Show Room"
    }
  ],
  "paths": {
    "/api/cars": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "Find All Car in Show Room",
        "description": "Returns all car",
        "operationId": "getAllCar",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCarResponse"
                }
              }
            }
          },
          "404": {
            "description": "No Cars Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "car"
        ],
        "summary": "Add a new car to the show room",
        "operationId": "addCar",
        "requestBody": {
          "description": "Car object that needs to be added to the show room",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success Add Car",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cars/{carId}": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "Find car by ID",
        "description": "Returns a single car",
        "operationId": "getCarById",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "car"
        ],
        "summary": "Update an existing car",
        "operationId": "updateCar",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Car object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "car"
        ],
        "summary": "Delete an existing car",
        "operationId": "deleteCar",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "ID of car to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Car not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CarRequest": {
        "type": "object",
        "properties": {
          "carName": {
            "type": "string",
            "example": "avanza"
          },
          "carBrand": {
            "type": "string",
            "example": "Toyota"
          },
          "carYear": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "carName": {
            "type": "string",
            "example": "avanza"
          },
          "carBrand": {
            "type": "string",
            "example": "Toyota"
          },
          "carYear": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "errorDetail": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string",
            "example": ""
          }
        }
      },
      "SingleCarResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "errorDetail": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "car": {
                "$ref": "#/components/schemas/Car"
              }
            }
          }
        }
      },
      "MultiCarResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "errorDetail": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "carList": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          }
        }
      }
    }
  }
}